@using Nop.Plugin.Payments.StripeConnect.Models;
@using Nop.Plugin.Payments.StripeConnect;

@model Nop.Plugin.Payments.StripeConnect.Models.PaymentInfo;

@{
    Layout = "";
    Html.AddScriptParts(ResourceLocation.Footer, Javascripts.StripeV3, excludeFromBundle: true);

}
@inject StripeConnectPaymentSettings _settings;

<div class="form-row">
    <label for="card-element">
        Credit or debit card
    </label>
    <div id="card-element">
        <!-- A Stripe Element will be inserted here. -->
    </div>

    <!-- Used to display form errors. -->
    <div id="card-errors" role="alert"></div>
</div>
<input type="hidden" asp-for="Token">
<script>
    var stripe = Stripe('@_settings.PublishableKey');

    // Create an instance of Elements.
    var elements = stripe.elements();

    // Custom styling can be passed to options when creating an Element.
    // (Note that this demo uses a wider set of styles than the guide below.)
    var style = {
        base: {
            color: '#32325d',
            lineHeight: '18px',
            fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
            fontSmoothing: 'antialiased',
            fontSize: '16px',
            '::placeholder': {
                color: '#aab7c4'
            }
        },
        invalid: {
            color: '#fa755a',
            iconColor: '#fa755a'
        }
    };

    // Create an instance of the card Element.
    var card = elements.create('card', { style: style });

    // Add an instance of the card Element into the `card-element` <div>.
    card.mount('#card-element');

    // Handle real-time validation errors from the card Element.
    card.addEventListener('change', function (event) {
        var displayError = document.getElementById('card-errors');
        if (event.error) {
            displayError.textContent = event.error.message;
        } else {
            displayError.textContent = '';
        }
    });

    $('input.payment-info-next-step-button').on('click', function (data) {
        stripe.createToken(card).then(function (result) {
            if (result.error) {
                // Inform the user if there was an error.
                var errorElement = document.getElementById('card-errors');
                errorElement.textContent = result.error.message;
            } else {
                // Send the token to your server.
                $('#@Html.IdFor(model => model.Token)').val(result.token);
                PaymentInfo.save();
            }
        });


    });
</script>