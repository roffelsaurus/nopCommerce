@using Nop.Plugin.Payments.StripeConnect.Models;
@using Nop.Plugin.Payments.StripeConnect;
@using Nop.Plugin.Payments.StripeConnect.Infrastructure;

@model Nop.Plugin.Payments.StripeConnect.Models.PaymentInfo;

@{
    Layout = "";
     Html.AddScriptParts(ResourceLocation.Footer, Javascripts.StripeV3, excludeFromBundle: true);

}
@inject StripeConnectPaymentSettings _settings;


<script>
    $(document).ready(function () {

        var submitForm = false;
        var errorsExist = false;
        var stepBack = false;
        $('.payment-info-next-step-button').attr('onclick', null);

        // Create a Stripe client.
        var stripe = Stripe('@_settings.PublishableKey');

        // Create an instance of Elements.
        var elements = stripe.elements();

        // Custom styling can be passed to options when creating an Element.
        // (Note that this demo uses a wider set of styles than the guide below.)
        var style = {
            base: {
                color: '#32325d',
                lineHeight: '18px',
                fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                fontSmoothing: 'antialiased',
                fontSize: '16px',
                '::placeholder': {
                    color: '#aab7c4'
                }
            },
            invalid: {
                color: '#fa755a',
                iconColor: '#fa755a'
            }
        };

        // Create an instance of the card Element.
        var card = elements.create('card', { style: style });

        // Add an instance of the card Element into the `card-element` <div>.
        card.mount('#card-element');

        // Handle real-time validation errors from the card Element.
        card.addEventListener('change', function (event) {
            var displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
            } else {
                displayError.textContent = '';
            }
        });

        function getToken() {
            stripe.createToken(card).then(function (result) {
                if (result.error) {
                    // Inform the user if there was an error.
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                    errorsExist = true;

                } else {
                $('#@Html.IdFor(model => model.Token)').val(result.token.id);

                submitForm = true;
                $('input.payment-info-next-step-button').trigger("click");


                }
            });

        }

                $('input.payment-info-next-step-button').on('click', function (data) {
                    if (!submitForm) {
                        if (!errorsExist && !stepBack) {
                            getToken();
                        }
                        return false;
                    }
                    else {
                        submitForm = false;
                        PaymentInfo.save();

                    }
             });

        $(document).on('accordion_section_opened', function (data) {
            if (data && (data.currentSectionId == 'opc-billing' || data.currentSectionId == 'opc-shipping' || data.currentSectionId == 'opc-shipping_method' || data.currentSectionId == 'opc-payment_method')) {
                stepBack = true;
            }
        });
    });

</script>

<div class="form-row">
    <label for="card-element">
        Credit or debit card
    </label>
    <div id="card-element">
        <!-- A Stripe Element will be inserted here. -->
    </div>

    <!-- Used to display form errors. -->
    <div id="card-errors" role="alert"></div>
</div>
<input type="hidden" asp-for="Token">

@*<table width="100%" cellspacing="2" cellpadding="1" border="0" id="stripeconnect-card-details">
        <tr>
            <td>
                <label asp-for="CardName">@T("Payment.CardName"):</label>
            </td>
            <td>
                <input type="text" asp-for="CardName" style="width:165px;" autocomplete="off" maxlength="22" />
                <span asp-validation-for="CardName"></span>
            </td>
        </tr>
        <tr>
            <td>
                <label asp-for="CardNumber">@T("Payment.CardNumber"):</label>
            </td>
            <td>
                <input type="text" asp-for="CardNumber" style="width:165px;" autocomplete="off" maxlength="22" />
                <span asp-validation-for="CardNumber"></span>
            </td>
        </tr>
        <tr>
            <td>
                <label asp-for="ExpireMonth">@T("Payment.ExpirationDate"):</label>
            </td>
            <td>
                <select asp-for="ExpireMonth" asp-items="Model.ExpireMonths"></select>
                /
                <select asp-for="ExpireYear" asp-items="Model.ExpireYears"></select>
            </td>
        </tr>
        <tr>
            <td>
                <label asp-for="CardCode">@T("Payment.CardCode"):</label>
            </td>
            <td>
                <input type="text" asp-for="CardCode" style="width:60px;" autocomplete="off" maxlength="4" />
                <span asp-validation-for="CardCode"></span>
            </td>
        </tr>
    </table>*@