@using Nop.Plugin.Payments.StripeConnect.Models;
@using Nop.Plugin.Payments.StripeConnect;
@using Nop.Plugin.Payments.StripeConnect.Infrastructure;

@model Nop.Plugin.Payments.StripeConnect.Models.PaymentInfo;

@{
    Layout = "";
}
@inject StripeConnectPaymentSettings _settings;


<script>
    $(document).ready(function () {

        var submitForm = false;
        var errorsExist = false;
        var stepBack = false;
        $('.payment-info-next-step-button').attr('onclick', null);

        // Create a Stripe client.
        var stripe = Stripe('@_settings.PublishableKey');


        var elements = stripe.elements({
            // Stripe's examples are localized to specific languages, but if
            // you wish to have Elements automatically detect your user's locale,
            // use `locale: 'auto'` instead.
            locale: 'auto'
        });

        var card = elements.create('card', {
            iconStyle: 'solid',
            style: {
                base: {
                    iconColor: '#000000',
                    color: '#333',
                    fontWeight: 600,
                    ':-webkit-autofill': {
                        color: '#e1c436',
                    },
                    '::placeholder': {
                        color: '#a3a3a3',
                    },
                },
                invalid: {
                    iconColor: '#ff0000',
                    color: '#333',
                },
            },
        });

        // Add an instance of the card Element into the `card-element` <div>.
        card.mount('#card-element');

        // Handle real-time validation errors from the card Element.
        card.addEventListener('change', function (event) {
            var displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
                displayError.classList.add('stripe-card-errors-show');
            } else {
                displayError.textContent = '';
                displayError.classList.remove('stripe-card-errors-show');
            }
        });

        function getToken() {
            stripe.createToken(card).then(function (result) {
                if (result.error) {
                    // Inform the user if there was an error.
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                    errorsExist = true;

                } else {
                $('#@Html.IdFor(model => model.Token)').val(result.token.id);

                submitForm = true;
                $('input.payment-info-next-step-button').trigger("click");


                }
            });

        }

        $('input.payment-info-next-step-button').on('click', function (data) {
            if (!submitForm) {
                if (!errorsExist && !stepBack) {
                    getToken();
                }

                return false;
            }
            else {
                submitForm = false;
                PaymentInfo.save();

            }
        });

        $(document).on('accordion_section_opened', function (data) {
            if (data && (data.currentSectionId == 'opc-billing' || data.currentSectionId == 'opc-shipping' || data.currentSectionId == 'opc-shipping_method' || data.currentSectionId == 'opc-payment_method')) {
                stepBack = true;
            }
        });
    });

</script>

<div>
    <div class="stripe-card-label">
        <label for="card-element">
            @T("Plugin.Payments.StripeConnect.PaymentInfo.PayWithCard")
        </label>
    </div>
    <div class="stripe-card-element-wrapper">
        <div class="stripe-card-element" id="card-element">
            <!-- A Stripe Element will be inserted here. -->
        </div>
    </div>

    <div id="card-errors" class="stripe-card-errors" role="alert">
    </div>
</div>
<input type="hidden" asp-for="Token">